{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Footer/Footer.js","components/NewTodo/NewTodo.js","App.js","index.js"],"names":["TodoItem","_ref","todo","index","checkBoxClick","destroyClick","className","cx","","crossed-label","completed","react_default","a","createElement","type","onClick","checked","title","TodoList","todos","map","components_TodoItem_TodoItem","Footer","allTodosClick","activeClick","completedClick","clearCompleted","indexTab","style","display","filter","length","href","NewTodo","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","arrLength","handleInputChange","event","setState","target","value","handleKeyDown","e","addTodo","props","key","obj","id","prevState","inherits","createClass","name","placeholder","onChange","onKeyDown","React","Component","App","todosOrigin","toConsumableArray","elem","i","assign","el","allCompleted","every","NewTodo_NewTodo","htmlFor","TodoList_TodoList","components_Footer_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"sTA8BeA,EA3BE,SAAAC,GAAgD,IAA9CC,EAA8CD,EAA9CC,KAAMC,EAAwCF,EAAxCE,MAAOC,EAAiCH,EAAjCG,cAAeC,EAAkBJ,EAAlBI,aACvCC,EAAYC,IAAG,CACnBC,IAAI,EACJC,gBAAiBP,EAAKQ,YAGxB,OACEC,EAAAC,EAAAC,cAAA,MAAIP,UAAWA,GACbK,EAAAC,EAAAC,cAAA,OAAKP,UAAU,QACbK,EAAAC,EAAAC,cAAA,SACEC,KAAK,WACLR,UAAU,SACVS,QAAS,kBAAMX,EAAcF,EAAMC,IACnCa,QAASd,EAAKQ,YAEhBC,EAAAC,EAAAC,cAAA,aAAQX,EAAKe,OACbN,EAAAC,EAAAC,cAAA,UACEC,KAAK,SACLR,UAAU,UACVS,QAAS,kBAAMV,EAAaH,EAAMC,OAGtCQ,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOR,UAAU,WCtBtBY,EAAW,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,MAAOf,EAAVH,EAAUG,cAAeC,EAAzBJ,EAAyBI,aAAzB,OACtBM,EAAAC,EAAAC,cAAA,MAAIP,UAAU,aACXa,EAAMC,IAAI,SAAClB,EAAMC,GAAP,OACTQ,EAAAC,EAAAC,cAACQ,EAAD,CACEnB,KAAMA,EACNE,cAAeA,EACfe,MAAOA,EACPhB,MAAOA,EACPE,aAAcA,QC2BPiB,EApCA,SAAArB,GAAA,IAAEsB,EAAFtB,EAAEsB,cAAeC,EAAjBvB,EAAiBuB,YAAaC,EAA9BxB,EAA8BwB,eAAgBN,EAA9ClB,EAA8CkB,MAAOO,EAArDzB,EAAqDyB,eAAgBC,EAArE1B,EAAqE0B,SAArE,OACbhB,EAAAC,EAAAC,cAAA,UAAQP,UAAU,SAASsB,MAAO,CAAEC,QAAS,UAC3ClB,EAAAC,EAAAC,cAAA,QAAMP,UAAU,cACba,EAAMW,OAAO,SAAA5B,GAAI,OAAKA,EAAKQ,YAAWqB,OACtC,IAFH,cAMApB,EAAAC,EAAAC,cAAA,MAAIP,UAAU,WACZK,EAAAC,EAAAC,cAAA,MAAIE,QAASQ,GACXZ,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KAAK1B,UAAYqB,EAAwB,GAAb,YAApC,QAKFhB,EAAAC,EAAAC,cAAA,MAAIE,QAASS,GACXb,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,WAAW1B,UAAwB,WAAbqB,EAAwB,WAAa,IAAnE,WAGFhB,EAAAC,EAAAC,cAAA,MAAIE,QAASU,GACXd,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,cAAc1B,UAAwB,cAAbqB,EAA2B,WAAa,IAAzE,eAIHR,EAAMW,OAAO,SAAA5B,GAAI,OAAIA,EAAKQ,YAAWqB,OAAS,GAC7CpB,EAAAC,EAAAC,cAAA,UACEC,KAAK,SACLR,UAAU,kBACVS,QAASW,GAHX,qBCzBOO,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAV,OAAAW,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAE,MAAAJ,EAAAE,OAAAS,EAAA,EAAAT,CAAAJ,IAAAc,KAAAC,MAAAb,EAAA,CAAAI,MAAAU,OAAAP,MACAQ,MAAQ,CACNjC,MAAO,GACPkC,UAAW,GAHbf,EAMEgB,kBAAoB,SAACC,GACnBjB,EAAKkB,SAAS,CACZrC,MAAOoC,EAAME,OAAOC,SAR1BpB,EAYEqB,cAAgB,SAACC,GAAM,IACbC,EAAYvB,EAAKwB,MAAjBD,QACR,GAAc,UAAVD,EAAEG,KAAsC,KAAnBH,EAAEH,OAAOC,MAAc,CAC9C,IAAMM,EAAM,CACV7C,MAAOyC,EAAEH,OAAOC,MAChBO,GAAI3B,EAAKc,MAAMC,UACfzC,WAAW,GAGb0B,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B/C,MAAO,GACPkC,UAAWa,EAAUb,UAAY,KAEnCQ,EAAQG,KAzBd1B,EAAA,OAAAC,OAAA4B,EAAA,EAAA5B,CAAAJ,EAAAC,GAAAG,OAAA6B,EAAA,EAAA7B,CAAAJ,EAAA,EAAA4B,IAAA,SAAAL,MAAA,WA+BI,OACE7C,EAAAC,EAAAC,cAAA,SACEsD,KAAK,UACLJ,GAAG,UACHzD,UAAU,WACV8D,YAAY,yBACZZ,MAAOjB,KAAKW,MAAMjC,MAClBoD,SAAU9B,KAAKa,kBACfkB,UAAW/B,KAAKkB,oBAvCxBxB,EAAA,CAA6BsC,IAAMC,WCsHpBC,6MAjHbvB,MAAQ,CACN/B,MAAO,GACPuD,YAAa,GACb/C,SAAU,MAGZgC,QAAU,SAACzD,GACTkC,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MAAK,GAAA8B,OAAAZ,OAAAsC,EAAA,EAAAtC,CAAM2B,EAAU7C,OAAhB,CAAuBjB,IAC5BwE,YAAW,GAAAzB,OAAAZ,OAAAsC,EAAA,EAAAtC,CAAM2B,EAAUU,aAAhB,CAA6BxE,UAI5CsB,YAAc,WACZY,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MAAO6C,EAAUU,YAAY5C,OAAO,SAAA5B,GAAI,OAAKA,EAAKQ,YAClDiB,SAAU,eAIdF,eAAiB,WACfW,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MAAO6C,EAAUU,YAAY5C,OAAO,SAAA5B,GAAI,OAAIA,EAAKQ,YACjDiB,SAAU,kBAIdJ,cAAgB,WACda,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MAAMkB,OAAAsC,EAAA,EAAAtC,CAAK2B,EAAUU,aACrB/C,UAAU,QAIdvB,cAAgB,SAACF,EAAMC,GACrBiC,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MAAO6C,EAAU7C,MAAMC,IAAI,SAACwD,EAAMC,GAAP,OAAcA,IAAM1E,EAC3CkC,OAAOyC,OAAOF,EAAM,CAAElE,WAAYsD,EAAU7C,MAAM0D,GAAGnE,YACrDkE,OAEsB,WAAxBxC,EAAKc,MAAMvB,UACbS,EAAKZ,cAGqB,cAAxBY,EAAKc,MAAMvB,UACbS,EAAKX,oBAITpB,aAAe,SAACH,GACdkC,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MAAO6C,EAAU7C,MAAMW,OAAO,SAAAiD,GAAE,OAAIA,EAAGhB,KAAO7D,EAAK6D,KACnDW,YAAaV,EAAUU,YAAY5C,OAAO,SAAAiD,GAAE,OAAIA,EAAGhB,KAAO7D,EAAK6D,WAInErC,eAAiB,WACfU,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MAAO6C,EAAU7C,MAAMW,OAAO,SAAA5B,GAAI,OAAKA,EAAKQ,YAC5CgE,YAAaV,EAAUU,YAAY5C,OAAO,SAAA5B,GAAI,OAAKA,EAAKQ,kBAI5DsE,aAAe,WACb5C,EAAKkB,SAAS,SAAAU,GAAS,MAAK,CAC1B7C,MACE6C,EAAU7C,MAAM8D,MAAM,SAAA/E,GAAI,OAAIA,EAAKQ,aAChCsD,EAAU7C,MAAM8D,MAAM,SAAA/E,GAAI,OAAKA,EAAKQ,YACnCsD,EAAU7C,MACTC,IAAI,SAAAwD,GAAI,OAAIvC,OAAOyC,OAAOF,EAAM,CAAElE,WAAYkE,EAAKlE,cACpDsD,EAAU7C,MACTC,IAAI,SAAAwD,GAAI,OAAIvC,OAAOyC,OAAOF,EAAM,CAAElE,WAAW,kFAKtD,OACEC,EAAAC,EAAAC,cAAA,WAASP,UAAU,WACjBK,EAAAC,EAAAC,cAAA,UAAQP,UAAU,UAChBK,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACqE,EAAD,CAASvB,QAASpB,KAAKoB,WAGzBhD,EAAAC,EAAAC,cAAA,WAASP,UAAU,OAAOsB,MAAO,CAAEC,QAAS,UAC1ClB,EAAAC,EAAAC,cAAA,SACEC,KAAK,WACLiD,GAAG,aACHzD,UAAU,aACVS,QAASwB,KAAKyC,eAEhBrE,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,cAAf,wBACAxE,EAAAC,EAAAC,cAACuE,EAAD,CACEjE,MAAOoB,KAAKW,MAAM/B,MAClBf,cAAemC,KAAKnC,cACpBC,aAAckC,KAAKlC,gBAIrBkC,KAAKW,MAAMwB,YAAY3C,OAAS,GAChCpB,EAAAC,EAAAC,cAACwE,EAAD,CACElE,MAAOoB,KAAKW,MAAM/B,MAClBK,YAAae,KAAKf,YAClBD,cAAegB,KAAKhB,cACpBE,eAAgBc,KAAKd,eACrBC,eAAgBa,KAAKb,eACrBC,SAAUY,KAAKW,MAAMvB,mBA1Gf4C,IAAMC,WCAxBc,IAASC,OACP5E,EAAAC,EAAAC,cAAC2E,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.95bcbc34.chunk.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nconst TodoItem = ({todo, index, checkBoxClick, destroyClick}) => {\n  const className = cx({\n    '': true,\n    'crossed-label': todo.completed,\n  });\n\n  return (\n    <li className={className}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onClick={() => checkBoxClick(todo, index)}\n          checked={todo.completed}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroyClick(todo, index)}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ todos, checkBoxClick, destroyClick }) => (\n  <ul className=\"todo-list\">\n    {todos.map((todo, index) => (\n      <TodoItem\n        todo={todo}\n        checkBoxClick={checkBoxClick}\n        todos={todos}\n        index={index}\n        destroyClick={destroyClick}\n      />\n    ))}\n  </ul>\n);\n","import React from 'react';\n\nconst Footer = ({allTodosClick, activeClick, completedClick, todos, clearCompleted, indexTab}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.completed).length}\n      {' '}\n              items left\n    </span>\n\n    <ul className=\"filters\">\n      <li onClick={allTodosClick}>\n        <a href=\"#/\" className={!indexTab ? 'selected' : ''}>\n            All\n        </a>\n      </li>\n\n      <li onClick={activeClick}>\n        <a href=\"#/active\" className={indexTab === 'active' ? 'selected' : ''}>Active</a>\n      </li>\n\n      <li onClick={completedClick}>\n        <a href=\"#/completed\" className={indexTab === 'completed' ? 'selected' : ''}>Completed</a>\n      </li>\n    </ul>\n\n    {todos.filter(todo => todo.completed).length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n          Clear completed\n      </button>\n    )}\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nexport class NewTodo extends React.Component {\nstate = {\n  title: '',\n  arrLength: 1,\n};\n\n  handleInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  handleKeyDown = (e) => {\n    const { addTodo } = this.props;\n    if (e.key === 'Enter' && e.target.value !== '') {\n      const obj = {\n        title: e.target.value,\n        id: this.state.arrLength,\n        completed: false,\n      };\n\n      this.setState(prevState => ({\n        title: '',\n        arrLength: prevState.arrLength + 1,\n      }));\n      addTodo(obj);\n    }\n  };\n\n\n  render() {\n    return (\n      <input\n        name=\"newTodo\"\n        id=\"newTodo\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={this.state.title}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { TodoList } from './components/TodoList/TodoList';\nimport Footer from './components/Footer/Footer';\nimport { NewTodo } from './components/NewTodo/NewTodo';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosOrigin: [],\n    indexTab: '',\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n      todosOrigin: [...prevState.todosOrigin, todo],\n    }));\n  };\n\n  activeClick = () => {\n    this.setState(prevState => ({\n      todos: prevState.todosOrigin.filter(todo => !todo.completed),\n      indexTab: 'active',\n    }));\n  };\n\n  completedClick = () => {\n    this.setState(prevState => ({\n      todos: prevState.todosOrigin.filter(todo => todo.completed),\n      indexTab: 'completed',\n    }));\n  };\n\n  allTodosClick = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todosOrigin],\n      indexTab: false,\n    }));\n  };\n\n  checkBoxClick = (todo, index) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((elem, i) => (i === index\n        ? Object.assign(elem, { completed: !prevState.todos[i].completed })\n        : elem)),\n    }));\n    if (this.state.indexTab === 'active') {\n      this.activeClick();\n    }\n\n    if (this.state.indexTab === 'completed') {\n      this.completedClick();\n    }\n  };\n\n  destroyClick = (todo) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(el => el.id !== todo.id),\n      todosOrigin: prevState.todosOrigin.filter(el => el.id !== todo.id),\n    }));\n  };\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      todosOrigin: prevState.todosOrigin.filter(todo => !todo.completed),\n    }));\n  };\n\n  allCompleted = () => {\n    this.setState(prevState => ({\n      todos:\n        prevState.todos.every(todo => todo.completed)\n        || prevState.todos.every(todo => !todo.completed)\n          ? prevState.todos\n            .map(elem => Object.assign(elem, { completed: !elem.completed }))\n          : prevState.todos\n            .map(elem => Object.assign(elem, { completed: true })),\n    }));\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addTodo={this.addTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.allCompleted}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={this.state.todos}\n            checkBoxClick={this.checkBoxClick}\n            destroyClick={this.destroyClick}\n          />\n        </section>\n\n        {(this.state.todosOrigin.length > 0) && (\n          <Footer\n            todos={this.state.todos}\n            activeClick={this.activeClick}\n            allTodosClick={this.allTodosClick}\n            completedClick={this.completedClick}\n            clearCompleted={this.clearCompleted}\n            indexTab={this.state.indexTab}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}